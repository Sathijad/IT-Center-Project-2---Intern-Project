{
  "info": {
    "name": "ITCenter Auth API",
    "description": "Black-box API tests for authentication and user management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/healthz",
          "host": ["{{baseUrl}}"],
          "path": ["healthz"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has status UP', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('UP');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Me - Without Auth (401)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/v1/me",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "me"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Returns 401 Unauthorized', function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Me - With Auth (200)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/me",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "me"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has user data', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.email).to.exist;",
              "    pm.expect(jsonData.displayName).to.exist;",
              "    pm.expect(jsonData.roles).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Admin Users - With Admin Role (200)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/admin/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "admin", "users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Returns paginated results', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.content).to.be.an('array');",
              "    pm.expect(jsonData.totalElements).to.be.a('number');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Admin Users - With Employee Role (403)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{employeeToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/admin/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "admin", "users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Returns 403 Forbidden', function () {",
              "    pm.response.to.have.status(403);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update User Roles",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"roles\": [\"ADMIN\", \"EMPLOYEE\"]\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/v1/admin/users/{{userId}}/roles",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "admin", "users", "{{userId}}", "roles"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Roles updated successfully', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.roles).to.include('ADMIN');",
              "    pm.expect(jsonData.roles).to.include('EMPLOYEE');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Audit Log",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/admin/audit-log?page=0&size=20",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "admin", "audit-log"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "20"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Returns audit entries', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.content).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}

